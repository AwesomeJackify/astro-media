---
import { getCollection, getEntry } from "astro:content";
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

export function getStaticPaths() {
  return [
    { params: { demo: "art-trail" } },
    { params: { demo: "forever-clean" } },
    { params: { demo: "ethnic-women" } },
    { params: { demo: "the-potcast" } },
    { params: { demo: "sports-physio" } },
    { params: { demo: "savante-design" } },
    { params: { demo: "thor" } },
    { params: { demo: "fightfitt" } },
    { params: { demo: "dirteedeeds" } },
    { params: { demo: "ar-built" } },
    { params: { demo: "ccwtc" } },
    { params: { demo: "re3" } },
    { params: { demo: "Elevate Studios" } },
  ];
}

import Layout from "~/layouts/Layout.astro";
import Splash from "~/components/splash.astro";

import config from "~/data/config.json";

const { demo } = Astro.params;

const currentDemoEntry: any = await getEntry("demos", demo);

if (!currentDemoEntry) {
  return {
    status: 404,
    error: new Error(`Portfolio item ${demo} not found`),
  };
}

const currentTestimonial = config.testimonials.find(
  (currentTestimonial) => currentTestimonial.slug === currentDemoEntry.slug
);

const data = currentDemoEntry.data;

const heroImages = import.meta.glob<{ default: ImageMetadata }>(
  "/src/data/portfolio/images/sites/*.{jpeg,jpg,png,gif,webp}"
);

const clientImages = import.meta.glob<{ default: ImageMetadata }>(
  "/src/data/portfolio/images/clients/**/*.{jpeg,jpg,png,gif,webp}"
);
---

<Layout title={data.title} description={data.description} navTop={true} index={data.index ?? true}>
  <Image
    src={heroImages[
      "/src/data/portfolio/images/sites/" + currentDemoEntry.slug + ".png"
    ]()}
    alt={data.title}
    class="w-full object-contain max-md:hidden pt-16"
  />

  <section class="flex flex-col bg-default py-16 px-2 max-md:pt-24">
    <div
      class="mx-auto flex w-full max-w-screen-xl flex-col gap-16 max-md:gap-6"
    >
      <div class="flex flex-col gap-4">
        <h1 class="w-full font-extrabold text-primary text-9xl">
          {data.title}
        </h1>

        <a href={data.url} class="underline" target="_blank"
          >Visit the website</a
        >
      </div>
      <div class="flex flex-col gap-8">
        <h2 class="font-light text-4xl">Project Description</h2>
        <p class="max-w-screen-md whitespace-pre-line text-sm">
          {data.description}
        </p>
        {
          currentTestimonial && (
            <a
              class="underline"
              href={"/testimonials/" + currentTestimonial.slug}
            >
              View testimonial
            </a>
          )
        }
      </div>
      {
        data.gallery.length > 0 ? (
          <div class="flex flex-col gap-8">
            <h2 class="font-light text-4xl">Gallery</h2>
            <div class="grid grid-cols-2 gap-8 max-md:grid-cols-1 max-md:gap-4">
              <Image
                src={heroImages[
                  "/src/data/portfolio/images/sites/" +
                    currentDemoEntry.slug +
                    ".png"
                ]()}
                alt={data.title}
                class="h-full w-full object-cover md:hidden"
              />
              {data.gallery.map((image: any) => (
                <Image
                  src={clientImages[image]()}
                  alt={data.title}
                  class="h-full w-full object-contain object-center"
                />
              ))}
            </div>
          </div>
        ) : (
          <div class="flex flex-col gap-8 md:hidden">
            <h2 class="font-light text-4xl">Gallery</h2>
            <div class="grid grid-cols-2 gap-8 max-md:grid-cols-1 max-md:gap-4">
              <Image
                src={heroImages[
                  "/src/data/portfolio/images/sites/" +
                    currentDemoEntry.slug +
                    ".png"
                ]()}
                alt={data.title}
                class="h-full w-full object-cover md:hidden"
              />
              {data.gallery.map((image: any) => (
                <Image
                  src={clientImages[image]()}
                  alt={image}
                  class="h-full w-full object-cover object-top"
                />
              ))}
            </div>
          </div>
        )
      }
    </div>
  </section>
</Layout>
